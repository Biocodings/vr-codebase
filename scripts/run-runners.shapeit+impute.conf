
# Definition of tasks: Pre-phasing with shapeit, impute2, post-phasing with shapeit
tasks => [ 'shapeit_pre', 'impute', 'shapeit_post' ],

# Input directories (please edit, don't use my scratch space :))
input_dir  => '/lustre/scratch107/user/pd3/imputation-tests/dropbox.in',
output_dir => '/lustre/scratch107/user/pd3/imputation-tests/dropbox.out',
work_dir   => '/lustre/scratch107/user/pd3/imputation-tests/dropbox.tmp',

# What are the output files
outputs => 
{ 
    vcfs => 
    [ 
        '$(prefix).shapeit_post/*.vcf.gz',
        '$(prefix).shapeit_post/*.vcf.gz.tbi',
    ],
},


# Configuration of individual tasks
shapeit_pre =>
{
    # Sequence of commnads to run with expected return statuses
    run =>
    [
        { 
            cmd => q[run-shapeit +mail pd3 +maxjobs 200 +config $(prefix).shapeit_pre.conf -o $(prefix).shapeit_pre],
            status => { done=>111, loop=>0, error=>255 },
            loop => 600,
        },
    ],

    # Runner's config file (a template)
    config => q[
        version  => '1392984920',

        shapeit_bin   => '/nfs/users/nfs_p/pd3/sandbox/svn/shapeit/shapeit.v2.r778.linux.x64',
        vcf_gensample => 'vcf-gensample',
        bcftools      => '/software/vertres/bin-external/bcftools-exp-rc',
        shapeit_args  => '',
        gen_map       => '/nfs/users/nfs_p/pd3/sandbox/svn/impute2/ALL_1000G_phase1interim_jun2011_impute/genetic_map_chr{CHROM}_combined_b37.txt',

        ref_vcf => '/lustre/scratch107/user/pd3/uk10k-1kg-imputation/impute2-hap-files.2014-03-18.vcfs/{CHROM}.vcf.gz',
        ref_dir => '/lustre/scratch107/user/pd3/uk10k-1kg-imputation/shapeit-hap-files.2014-03-21',
        in_vcf  => '$(vcf)',

        region => [ qw(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 X) ],

        # Number of sites per chunk and in buffer regions. The total number of
        #   sites considered is buffer_nsites+chunk_nsites.  The chunks are
        #   determined based on the input VCF (-i) unless chunk_by_ref is set.
        buffer_nsites  => 1_000,
        chunk_nsites   => 10_000,

        # Create whole-genome VCF? This can produce *huge* files for thousands of samples
        merge_chroms   => 0,

        # Limits for shapeit and the other tasks
        shapeit_limits => { memory=>5_500, runtime=>3*24*60 },
    ],
},

impute =>
{
    run =>
    [
        {
            cmd => q[run-impute2 +mail pd3 +maxjobs 200 +config $(prefix).impute.conf -o $(prefix).impute],
            status => { done=>111, loop=>0, error=>255 },
            loop => 600,
        },
    ],
    
    config => q[
        version  => '1392898523',

        impute2_bin => '/nfs/users/nfs_p/pd3/sandbox/svn/impute2/impute2.3.0',
        vcf_impute2 => 'vcf-impute2',
        gen_map     => '/nfs/users/nfs_p/pd3/sandbox/svn/impute2/ALL_1000G_phase1interim_jun2011_impute/genetic_map_chr{CHROM}_combined_b37.txt',
        bcftools    => '/software/vertres/bin-external/bcftools-exp-rc',
        phased_concat_args => '',

        # known_vcf    => [ '/lustre/scratch107/user/pd3/uk10k-1kg-imputation/uk10k-files/{CHROM}.vcf.gz', '/lustre/scratch107/user/pd3/uk10k-1kg-imputation/1kg-files/{CHROM}.vcf.gz'  ],
        known_hapref => '/lustre/scratch107/user/pd3/uk10k-1kg-imputation/impute2-hap-files.2014-03-18/',
        in_vcf       => '$(prefix).shapeit_pre/{CHROM}.vcf.gz',

        # phased_only  => 0,    # Include only fully phased sites from the reference panel
        
        impute2_args => '-Ne 20000 -k 80 -allow_large_regions',

        # Chunk-specific options will be applied to chunks with a non-zero overlap
        chunk_options => { 
            'X:0-155270560' => { impute2_args=>'-Ne 15000 -k 100 -allow_large_regions'  },
        },


        # Number of sites per chunk and in buffer regions. The total number of
        #   sites considered is buffer_nsites+chunk_nsites.  The chunks are
        #   determined based on the input VCF (-i) unless chunk_by_known is set.
        buffer_nsites  => 5_000,
        chunk_nsites   => 10_000,
        chunk_by_known => 0,

        # Create whole-genome VCF? This can produce *huge* files for thousands of samples
        merge_chroms   => 0,

        limits   => { memory=>5_500, runtime=>3*24*60 },
    ],
},

shapeit_post =>
{
    run =>
    [
        { 
            cmd => q[run-shapeit +mail pd3 +maxjobs 200 +config $(prefix).shapeit_post.conf -o $(prefix).shapeit_post],
            status => { done=>111, loop=>0, error=>255 },
            loop => 600,
        },
    ],

    config => q[
        version  => '1392984920',

        shapeit_bin   => '/nfs/users/nfs_p/pd3/sandbox/svn/shapeit/shapeit.v2.r778.linux.x64',
        vcf_gensample => 'vcf-gensample',
        bcftools      => '/software/vertres/bin-external/bcftools-exp-rc',
        shapeit_args  => '',
        gen_map       => '/nfs/users/nfs_p/pd3/sandbox/svn/impute2/ALL_1000G_phase1interim_jun2011_impute/genetic_map_chr{CHROM}_combined_b37.txt',

        in_vcf  => '$(prefix).impute/{CHROM}.vcf.gz',
        ref_vcf => '/lustre/scratch107/user/pd3/uk10k-1kg-imputation/impute2-hap-files.2014-03-18.vcfs/{CHROM}.vcf.gz',
        ref_dir => '/lustre/scratch107/user/pd3/uk10k-1kg-imputation/shapeit-hap-files.2014-03-21',

        # Number of sites per chunk and in buffer regions. The total number of
        #   sites considered is buffer_nsites+chunk_nsites.  The chunks are
        #   determined based on the input VCF (-i) unless chunk_by_ref is set.
        buffer_nsites  => 1_000,
        chunk_nsites   => 10_000,

        # Create whole-genome VCF? This can produce *huge* files for thousands of samples
        merge_chroms   => 1,

        # Limits for shapeit and the other tasks
        shapeit_limits => { memory=>5_500, runtime=>3*24*60 },
    ],
},

   
