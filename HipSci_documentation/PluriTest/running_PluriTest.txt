Using PluriTest
===============

The overall goal of QC1 is to detect which of the derived/iPS samples is most like a well reprogrammed iPS sample, 
so that such a sample can be selected for the further sequencing, etc. studies. QC1 is a quicker/cheaper check 
for iPS reprogramming success, i.e. to assist selection between the iPS samples before the more expensive exome sequencing, 
ChIP-seq, RNA-seq studies. PluriTest is used to see if the expression profile is similar to an average expression 
profile for iPS samples. PennCNV and QuantiSNP are used to identify denovo CNVs as an indication of genetic disruptions 
caused by the reprogramming process that creates the iPS samples. Disruptions are viewed as an indication of a 
less successful iPS sample which is less desirable to be selected as a sample to be sequenced etc. in 
the "QC2" stage of HipSci (exome sequencing, ChIP-seq, RNA-seq).

[Chris McGee <cm13@sanger.ac.uk> produces the gene expression data.]

PluriTest can be used on the command-line or interactively within the R environment.

I recommend using it on the command-line in the first instance to create a png output. If the labelling isn't clear 
in the generated file pluritest_image03.png, use R interactively to create PDFs with/without 
labels so that you can relabel manually for clarity.

In either case you will need to obtain files from iRODS and reformat one of the files you obtain, the profile file.

You'll need this set in your environment:

R_LIBS=/software/vertres/lib/R-2.15.2/

Notes:
- PluriTest requires a minimum of 2 samples at present. One of the graphs generated by PluriTest clusters the samples (pluritest_image02a)
and the script falls over if there are not enough samples when doing this. You might want to modify the PluriTest R script at some point 
to catch this exception, but currently it just fails. This is because Thomas said not to spend time on it as there should always 
be a control + several iPS samples. However, sometimes incomplete cohorts are released prior to the rest of the samples being released later, 
so it would be better to account for this.
- I have interacted with the PluriTest authors Franz-Josef MÃ¼ller, and Bernhard M Schuld while working on HipSci.They are very friendly 
and helpful. I have provided them with the changes that I made to PluriTest to make it work with R-2.15.2. If you make further changes 
e.g. to make it work with Rv3 I think they would like you to share the modifications with them. Franz-Josef is the PI, Bernhard is the R
programmer (though he is on another project he still might help you).

Obtain the Annotation and Profile Files from iRODS
==================================================

Required data files:
- gene expression annotation file e.g. hipsci_12samples_2014-02-12_annotation.txt
- gene expression profile file, the file name ends in "Sample_Probe_Profile" e.g. hipsci_12samples_2014-02-12_Sample_Probe_Profile.txt (This is 
not the quantile normalised version which is also available on iRODS (e.g. hipsci_12samples_2014-02-12_quantile_Sample_Probe_Profile.txt. You 
could probably use the quantile normalised file to get the same results, but I have not tested this, hence currently we use the 
file that is not normalised).

Both of these files should be available using iRODS - see iRODS_access.txt for more info on accessing the data.

>iget /archive/GAPI/exp/analysis/cb/82/3c/hipsci_12samples_2014-02-12/hipsci_12samples_2014-02-12_Sample_Probe_Profile.txt
>iget /archive/GAPI/exp/analysis/cb/82/3c/hipsci_12samples_2014-02-12/hipsci_12samples_2014-02-12_annotation.txt 

[you can also get the files from /nfs/t77_array_processed]

Reformat the Profile File
=========================

Useful scripts:

- convert_GEX.pl
- reheader_GEX.pl
- extract_columns_GEX.pl

The annotation file is used to convert IDs in the profile file, e.g. "7A5	6450255" -> "ILMN_1762337".

Remove the first 8 lines of the annotation file (e.g. hipsci_12samples_2014-02-12_annotation.txt) i.e.
remove anything up to the line:

TargetID        ProbeID REFSEQ_ID       SYMBOL  PROBE_ID        PROBE_SEQUENCE  CHROMOSOME      PROBE_COORDINATES       

In the example file hipsci_12samples_2014-02-12_annotation.txt remove this:

[Header]
GSGX Version    1.9.0
Report Date     12/02/2014 13:29:56
Project hipsci_12samples_2014-02-12
Group Set       groupset
Analysis        groupset_nonorm_nobkgd
Normalization   none
[Sample Probe Profile]

So now the file should start with this:

TargetID        ProbeID REFSEQ_ID       SYMBOL  PROBE_ID        PROBE_SEQUENCE  CHROMOSOME      PROBE_COORDINATES       

Convert the file to UNIX format:

>dos2unix hipsci_12samples_2014-02-12_Sample_Probe_Profile.txt

Remove the first 7 lines of the profile file (e.g. hipsci_12samples_2014-02-12_Sample_Probe_Profile.txt) so 
that it now starts with:

TargetID	ProbeID	MIN_Signal-9425128065_A [etc. ..... ]

I.e. remove this:

llumina Inc. GenomeStudio version 1.9.0
Normalization = none
Array Content = HumanHT-12_V4_0_R1_15002873_B.bgx.xml
Error Model = none
DateTime = 12/02/2014 13:27
Local Settings = en-GB

(including the empty line on line 7)

So that the file now starts with:

TargetID	ProbeID	MIN_Signal-9425128065_A	AVG_Signal-9425128065_A	MAX_Signal-9425128065_A     etc..

Convert the profile file to UNIX format:

>dos2unix hipsci_12samples_2014-02-12_Sample_Probe_Profile.txt

Now convert the target/probe IDs ("7A5	6450255" -> "ILMN_1762337") and remove surplus columns in the profile file, using the convert_GEX.pl script.
An example of the columns removed - here are all columns present:

MIN_Signal-9425128065_A	
AVG_Signal-9425128065_A	
MAX_Signal-9425128065_A	
NARRAYS-9425128065_A	
ARRAY_STDEV-9425128065_A	
BEAD_STDEV-9425128065_A	
Avg_NBEADS-9425128065_A	
Detection-9425128065_A

these should be reduced to:

AVG_Signal-9425128065_A	
BEAD_STDEV-9425128065_A	
Avg_NBEADS-9425128065_A	
Detection-9425128065_A	

>perl convert_GEX.pl hipsci_12samples_2014-02-12_annotation.txt hipsci_12samples_2014-02-12_Sample_Probe_Profile.txt > set14_GEX_converted.txt

Next objective: map the "BEADCHIP_ARRAY" IDs used in the profile file (e.g. 9425128065_A) to their corresponding friendly IDs (e.g. vorx_1). This will
be used to reheader the profile with friendly IDs. [The graphs generated by PluriTest will then contain friendly IDs.]

This is done by mapping from BEADCHIP_ARRAY ID to "Sanger Sample ID" to friendly ID.
Step 1 = BEADCHIP_ARRAY ID to "Sanger Sample ID" (using a spreadsheet from iRODS - see below)
Step 2 = Sanger Sample ID to "friendly ID" (using Anja's spreadsheet - see below)

[NB You can access the friendly IDs in SequenceScape but this isn't how I do it.]

1). Use the spreadsheet available on iRODS that gives info about the samples e.g. hipsci_12samples_2014-02-12.xlsx.
Look at the two columns labelled "SAMPLE ID" (column C) and "BEADCHIP_ARRAY" (column P).

E.g. 
[Column P]         [Column C] 
BEADCHIP_ARRAY ->  SAMPLE ID 
9425128065_A   ->  QC1Hip-515
9425128065_C   ->  QC1Hip-516
9425128065_E   ->  QC1Hip-673
9425128065_G   ->  QC1Hip-847
9425128065_I   ->  QC1Hip-835
9425128065_K   ->  QC1Hip-841
9425128065_B   ->  QC1Hip-842
9425128065_D   ->  QC1Hip-843
9425128065_F   ->  QC1Hip-844
9425128065_H   ->  QC1Hip-848
9425128065_J   ->  QC1Hip-846
9425128065_L   ->  QC1Hip-845

Using these columns you now know the Sanger Sample IDs for each sample in the profile file from iRODS. 
You can use the Sample ID to look up the friendly ID in a spreadsheet that you can get from Anja which contains all current 
samples e.g. "All samples list CGap_140122 no filter.xls". I email her for the latest version when new gene expression 
data becomes available on iRODS.

So now you have:

BEADCHIP_ARRAY  ->  SAMPLE ID   ->  Friendly ID from Anja's spreadsheet
9425128065_A    ->  QC1Hip-515  ->  vorx_1
9425128065_C    ->  QC1Hip-516  ->  vorx_3
9425128065_E    ->  QC1Hip-673  ->  vorx  
9425128065_G    ->  QC1Hip-847  ->  veqz_6
9425128065_I    ->  QC1Hip-835  ->  vorx_2
9425128065_K    ->  QC1Hip-841  ->  dard_1
9425128065_B    ->  QC1Hip-842  ->  dard_2
9425128065_D    ->  QC1Hip-843  ->  dard_3
9425128065_F    ->  QC1Hip-844  ->  dard  
9425128065_H    ->  QC1Hip-848  ->  veqz  
9425128065_J    ->  QC1Hip-846  ->  veqz_5
9425128065_L    ->  QC1Hip-845  ->  veqz_4

You could manually edit the converted profile file to reheader/add the friendly IDs, but I use a script to do this. To use the script you need to put 
a "BEADCHIP_ARRAY" to friendly ID mapping as two tab separated columns in a file e.g. put in a file called set_14_BEADCHIPARRAY-to-Friendly_IDs.txt:

9425128065_A	vorx_1
9425128065_C	vorx_3
9425128065_E	vorx  
9425128065_G	veqz_6
9425128065_I	vorx_2
9425128065_K	dard_1
9425128065_B	dard_2
9425128065_D	dard_3
9425128065_F	dard  
9425128065_H	veqz  
9425128065_J	veqz_5
9425128065_L	veqz_4

Reheader (convert the IDs to friendly IDs) the previously converted profile file:

>perl reheader_GEX.pl set_14_BEADCHIPARRAY-to-Friendly_IDs.txt set14_GEX_converted.txt > set14_GEX_converted.txt_reheadered

The next part is optional - extract columns to have one file per cohort e.g. dard, dard_1, dard_2, dard_3 -> dard.txt
[I find having one set of graphs per cohort more manageable than have multiple cohorts in each graph.]

edit extract_columns_GEX.pl - change column numbers for each rearrangement as necessary:
my @order = (6, 11, 2, 4);  # dard
perl extract_columns_GEX.pl set14_converted.txt_reheadered > dard.txt

edit extract_columns_GEX.pl - change column numbers for each rearrangement as necessary:
my @order = (5, 1, 9, 3);   # vorx
perl extract_columns_GEX.pl set14_converted.txt_reheadered > vorx.txt

edit extract_columns_GEX.pl - change column numbers for each rearrangement as necessary:
my @order = (8, 12, 10, 7); # veqz         
perl extract_columns_GEX.pl set14_converted.txt_reheadered > veqz.txt

Now run PluriTest on the command-line
=====================================

IMPORTANT: You'll need this set in your environment:

R_LIBS=/software/vertres/lib/R-2.15.2/

>/software/vertres/installs/R-2.15/R --slave --args "dard.txt" "/lustre/scratch105/vrpipe/refs/human/ncbi37/resources_hipsci/expression/pluritest.RData" < /software/vertres/scripts/pluriTest_commandLine_vrpipe.r

Now see the output e.g. pluritest_image03.png (pluritest_image02.png & pluritest_image03c.png show equivalent info).

Repeat for the other cohorts, e.g.

/software/vertres/installs/R-2.15/R --slave --args "veqz.txt" "/lustre/scratch105/vrpipe/refs/human/ncbi37/resources_hipsci/expression/pluritest.RData" < /software/vertres/scripts/pluriTest_commandLine_vrpipe.r

=> see pluritest_image03.png etc.

/software/vertres/installs/R-2.15/R --slave --args "vorx.txt" "/lustre/scratch105/vrpipe/refs/human/ncbi37/resources_hipsci/expression/pluritest.RData" < /software/vertres/scripts/pluriTest_commandLine_vrpipe.r

=> see pluritest_image03.png etc.

If the labels overlap in pluritest_image03.png you could use pluritest_image02.png & pluritest_image03c.png to work out which is which; or 
you can generate a PDF using R on the commandline using one of these: 

pluriTest_commandLine_vrpipe.r         - PNG output with labels
pluriTestLabels_commandLine_vrpipe.r   - PDF output with labels
pluriTestNoLabels_commandLine_vrpipe.r - PDF output without label

or use R interactively (although you should be able to get everything you need using the command-line).

Using R Interactively
=====================

IMPORTANT: You'll need the following set in your environment .bashrc or equivalent if you are working on the vr farm and are using /software/vertres/installs/R-2.15/R:

export R_LIBS="/software/vertres/lib/R-2.15.2/"

Setup PluriTest in R.

Steps 1 & 2 shown next are only required if you are installing on your own machine - I don't think this is necessary, 
just use /software/vertres/installs/R-2.15/R on the VR farm. 

1). PluriTest requires R-2.15.2 with bioconductor installed (see http://www.bioconductor.org/install/) (PluriTest requires the "lumi" package which is part of Bioconductor). 
If you are setting up on your own machine, you need to install bioconductor, on the vr farm it will already be installed if you use /software/vertres/installs/R-2.15/R.

>/software/vertres/installs/R-2.15/R
>source("http://bioconductor.org/biocLite.R")
>biocLite()

2). Install the R package "Calibrate", although this is already installed on the VR farm if you're using /software/vertres/installs/R-2.15/R on vr-login.

See http://cran.r-project.org/web/packages/calibrate/index.html

3). Start R and load the PluriTest package. This is available as "Supplementary Data" / "PluriTest R/Bioconductor workspace" at 
http://www.nature.com/nmeth/journal/v8/n4/abs/nmeth.1580.html (go to the end of the page) - the file is called "nmeth.1580-S2.zip". Inside the zip file, 
find "NMETH-BC11016B-pluritestsub.unk". Load this into into your R workspace to use the PluriTest data etc.. 

Start R:

>/software/vertres/installs/R-2.15/R

Inside R:

>load("NMETH-BC11016B-pluritestsub.unk")

You should be able to see PluriTest data etc. inside your R workspace now (H9targetArray, W12, W15, etc.):

>ls()

You should be able to see pluritest etc. now.

Now exit R for the moment:

>q()
Save workspace image? [y/n/c]:y

If you save the workspace image, you will now have a file called .RData in your local directory. If you restart R from that directory you will have PluriTest 
available to you within your R environment. However, the distributed version of the PluriTest R program will not work with R-2.15.2.

4). To run PluriTest using R-2.15.2, you will need a modified version of the R PluriTest program (see the R_files/ directory), these are:

- pluriTestLabels_interactive.r
- pluriTestNoLabels_interactive.r

pluriTestLabels_interactive.r is a slightly modified version of the standard PluriTest R program where the changes are only for it to work with R-2.15.2, 
there is no change in functionality. pluriTestNoLabels_interactive.r doesn't print labels on the graph e.g. when you want to subsequently manually annotate 
them in a graphics package (if labels overlap in the standard output and are unreadable). 

Copy these two files to your local directory, then restart R.

>/software/vertres/installs/R-2.15/R
>source("pluriTestLabels_interactive.r")
>source("pluriTestNoLabels_interactive.r")

You should now be able to run PluriTest on a converted profile file if you copy it to your local directory, e.g.:

>pluriTest-with-labels("dard.txt", ".")

See output PDFs in your local directory.

>pluriTest-no-labels("dard.txt", ".")

See pluritest_image03_no_labels.pdf for the unlabelled graph.

Repeat for other cohorts as necessary e.g.

>pluriTest-with-labels("veqz.txt", ".")
>pluriTest-no-labels("veqz.txt", ".")

Generating a Profile File for a Cohort Split Over Multiple Releases
===================================================================

Occasionally cohorts are split over multiple releases. This could be because a sample was forgotten, or if a swap is detected (incorrect sample). In the 
case of a swap the incorrect sample is resubmitted and will appear in a later release. When this data arrives it needs to be integrated into the 
rest of the cohort minus the incorrect previous sample to give the correct results for the cohort.

You'll need to create a merged profile file containing the relevant samples from the releases and then generate graphs as described above. 
I do this by making a converted profile file for each release, extracting the samples for a cohort, and then merging them.
I use a script to perform the final merge (the rest you can do with extract_columns.pl & the normal profile file conversion as described above).
Use the script as follows e.g.:

>perl combine_converted_profiles.pl profile_1.txt profile_2.txt > profile_1-2_combined.txt
